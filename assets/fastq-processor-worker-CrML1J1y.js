(function(){"use strict";async function c(n){const e=new Uint8Array(await n.slice(0,2).arrayBuffer());return e[0]===31&&e[1]===139}async function*o(n){let e=!1;for(;!e;){const{done:t,value:s}=await n.read();e=t,s&&(yield s)}}async function*d(n){const e=n.stream().pipeThrough(new DecompressionStream("gzip")).pipeThrough(new TextDecoderStream).getReader();yield*o(e)}async function*p(n){const e=n.stream().pipeThrough(new TextDecoderStream).getReader();yield*o(e)}const a=0,u=1,f=2,S=3,q=/^[ACGTN]+$/i,I=/^[\x21-\x7E]+$/;function N(n){const e=n[a],t=n[u],s=n[f],i=n[S];return!e.startsWith("@")||!s.startsWith("+")||s.length>1||t.length<1||i.length<1||t.length!==i.length||!q.test(t)?!1:I.test(i)}const l=/^@(?<instrument>\w+):(?<runNumber>\d+):(?<flowcellId>[A-Za-z0-9-]+):(?<lane>\d+):(?<tile>\d+):(?<xPos>\d+):(?<yPos>\d+)(?::(?<umi>[ATGCN]+\+[ATGCN]+))?\s(?<read>[12]):(?<isFiltered>[YN]):(?<control>\d+):(?<index>([ATGCN]+(?:\+[ATGCN]+)?)|\d+)$/,h=n=>l.test(n),g=n=>{const e=l.exec(n.trim());if(!(e!=null&&e.groups))return null;const t=e.groups;return{instrument:t.instrument,runNumber:Number(t.runNumber),flowcellId:t.flowcellId,lane:Number(t.lane),tile:Number(t.tile),xPos:Number(t.xPos),yPos:Number(t.yPos),umi:t.umi,read:t.read==="2"?2:1,isFiltered:t.isFiltered==="Y",control:Number(t.control),index:t.index}},w=n=>n&&h(n)?"Illumina":"Unknown",x={minIon:"MinION",gridIon:"GridION",promethIon:"PromethION",unknownNanopore:"Unknown"},r={miSeq:"MiSeq",iSeq:"iSeq",miniSeq:"MiniSeq",nextSeq1000_2000:"NextSeq 1000/2000",novaSeqX:"NovaSeq X",nextSeq:"NextSeq",novaSeq:"NovaSeq",hiSeqX:"HiSeq X",hiSeq3000:"HiSeq 3000",hiSeq4000:"HiSeq 4000",hiSeq2500:"HiSeq 2500",hiSeq1500:"HiSeq 1500",hiSeq2000:"HiSeq 2000",genomeAnalyzerIIx:"Genome Analyzer IIx",unknownIllumina:"Unknown"},m={unknown:"Unknown"};[...Object.values(r),...Object.values(x),...Object.values(m)];const y=[{pattern:/HWI-M\d+/,instruments:[r.miSeq]},{pattern:/M\d+/,instruments:[r.miSeq]},{pattern:/LH\d+/,instruments:[r.novaSeqX]},{pattern:/VH\d+/,instruments:[r.nextSeq1000_2000]},{pattern:/FS\d+/,instruments:[r.iSeq]},{pattern:/MN\d+/,instruments:[r.miniSeq]},{pattern:/NB\d+/,instruments:[r.nextSeq]},{pattern:/NS\d+/,instruments:[r.nextSeq]},{pattern:/NA\d+/,instruments:[r.novaSeq]},{pattern:/A\d+/,instruments:[r.novaSeq]},{pattern:/E\d+/,instruments:[r.hiSeqX]},{pattern:/K\d+/,instruments:[r.hiSeq3000,r.hiSeq4000]},{pattern:/J\d+/,instruments:[r.hiSeq3000]},{pattern:/D\d+/,instruments:[r.hiSeq2500]},{pattern:/HWI-D\d+/,instruments:[r.hiSeq2500]},{pattern:/C\d+/,instruments:[r.hiSeq1500]},{pattern:/HWI-C\d+/,instruments:[r.hiSeq1500]},{pattern:/SN\d+/,instruments:[r.hiSeq2000,r.hiSeq2500]},{pattern:/HWUSI/,instruments:[r.genomeAnalyzerIIx]},{pattern:/^.*$/,instruments:[r.unknownIllumina]}];function A(n){return E(n,y)}function E(n,e){for(const t of e)if(t.pattern.test(n))return t.instruments;return[m.unknown]}const b=(n,e)=>{const t=g(e[a]);if(!t)return{file:n,status:"Error",error:"Expected Illumina header",platform:"Unknown"};const s=A(t.instrument);return{file:n,status:"Done",platform:"Illumina",instrumentId:t.instrument,instrumentTypes:s,flowcellId:t.flowcellId,runNumber:t.runNumber,cycles:e[u].length,indexes:t.index,readNumber:t.read}},k=(n,e)=>({file:n,platform:"Unknown",status:e});self.onmessage=async n=>{const{file:e}=n.data;try{const s=await c(e)?d(e):p(e),i=await H(s);if(!i){self.postMessage({type:"error",fileName:e.name,error:"No reads found"});return}if(!N(i)){self.postMessage({type:"error",fileName:e.name,error:"Invalid read structure"});return}const G=U(e,i),M=T(G);self.postMessage(M)}catch(t){self.postMessage({type:"error",fileName:e.name,error:t.message})}};function T(n){return{type:"result",result:n}}async function H(n){const e=[];for await(const t of n){const s=t.split(`
`).map(i=>i.trim()).filter(Boolean);for(const i of s)if(e.push(i),e.length===4)break;if(e.length===4)break}return e.length===4?e:null}function U(n,e){switch(w(e[a])){case"Illumina":return b(n,e);default:return k(n,"Done")}}})();
